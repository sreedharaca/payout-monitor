<?php

namespace Katana\JsonParserBundle\Tests\Parser;


use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Katana\JsonParserBundle\Service\ParserManager;


class ClicksmobParserTest extends WebTestCase
{
    private $container;

    public function testParse()
    {
        $json = '[{
            "id":1115,
            "name":"Slotomania- #1 slot machine game ",
            "subheadline":"Up to $3 per iPad and iPhone App install in US- #1 slot machine game ",
            "description":"<p></p><p></p><p></p><p>The most popular social video slots game in the world!</p><p>Slotomania is a Video Slots experience like no other, bringing a Vegas experience.<br>Its unique blend of top-tier graphics and high-quality sound effects combine to create a top-notch gaming experience.</p><p>#1 slot machine game&nbsp;</p><p><span style=\"line-height: 1.45em;\">Due to its&nbsp;popularity, the&nbsp;conversion&nbsp;rate is very high</span></p><p></p><p></p>\r\n",
            "conversionUserFlow":"<p></p><p>- User is directly redirected on App Store to download the application<br>- User has to open the application</p>\r\n",
            "restrictions":"<p></p><p></p><p></p><p><span style=\"line-height: 1.5em; font-size: 15px;\">- Non incentived traffic</span></p><p><span style=\"line-height: 1.5em; font-size: 15px;\">- 100 daily cap</span></p><p></p>\r\n",
            "note":"<p></p><p><i></i></p><p><i>All affiliates interested in using their own banners to promote ClicksMob Inc. campaigns are required to obtain approval from their Account Managers.</i></p><i>Failure to obtain approval will result in suspension from promotion of the campaign and the affiliate will not be compensated for revenue generated by this means.</i><i></i><p></p>\r\n",
            "conversionMode":2,"dateStart":1390240874000,"date_end":null,"referenceId":null,"cookieDurationInDays":null,"budgetLimitNum":null,"budgetLimitUnits":"1",
            "capsLimitNum":100,"capsLimitUnits":"1",
            "android_sdk_code":null,"ios_sdk_code":null,"trackedWithClicksmobSdk":null,
            "targets":[
                {
                    "platformId":null,
                    "parent":null,
                    "previewUrl":"",
                    "iphonePreviewUrl":"",
                    "ipadPreviewUrl":"https://itunes.apple.com/il/app/id447553564?mt=8&src=af",
                    "androidPreviewUrl":"",
            "wapPreviewUrl":"",
            "javaPreviewUrl":"",
            "blackberryPreviewUrl":"",
            "targetUrl":"http://t.mobitrk.com/?a=t&aff_id=305&tags=&o_id=1115"}],
            "userPayouts":[
                {"payout":2.2,"countryNames":"United States","platformNames":"iPhone"},
                {"payout":3.0,"countryNames":"United States","platformNames":"iPad"},
                {"payout":0.5,"countryNames": "Hong Kong,Indonesia,Malaysia,Singapore,Taiwan,Thailand","platformNames": "Android"}
            ],
            "bannersUrl":"http://www.clicksmob.com/files/1115/image_banners/banners.zip",
            "categories":[
                {"name":"Gambling"},
                {"name":"Apps"},
                {"name":"Games"}
            ]
        }]';

        $ParserManager = $this->container->get('parser_manager');

        $Parser = $ParserManager->getParser(ParserManager::PROVIDER_CLICKSMOB);

        $data = $Parser->parse($json);

        $offer = $data[0];


        $this->assertTrue($offer['external_id'] == 1115, 'Wrong CLICKSMOB offer id.');
        $this->assertTrue($offer['name'] == "Slotomania- #1 slot machine game ", 'Wrong name.');
        $this->assertTrue($offer['payout'] == 3.0, 'Offer name must be not empty.');
        $this->assertTrue($offer['preview_url'] == "https://itunes.apple.com/il/app/id447553564?mt=8&src=af", 'Wrong preview_url got.');
        $this->assertEquals(7, count($offer['countries']), 'Wrong country count.');
    }


    /***
     * Set Up container
     */
    public function setUp()
    {
        static::$kernel = static::createKernel();
        static::$kernel->boot();
        $this->container = static::$kernel->getContainer();
    }
}
